name: Batch

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment"
        required: true
        default: 'v1'
      runs:
        description: "Runs"
        required: true
        default: 100
      maps:
        description: "Maps"
        required: true
        default: "1 2 3 4 5 6 7 8 9 10"

jobs:
  generator:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generator.outputs.matrix }}
    steps:
      - id: generator
        run: |
          ARR=($(seq 1 1 $((${{ github.event.inputs.runs }}-1))))
          ARRAY=`printf "%s, " "${ARR[@]}"`
          ARRAY=$ARRAY"${{ github.event.inputs.runs }}"
          echo '::set-output name=matrix::{"run":['$ARRAY']}'

  run:
    needs: generator
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJSON(needs.generator.outputs.matrix)}}
      max-parallel: 19
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_USERNAME }}
          password: ${{ secrets.GH_PAT }}

      - name: Run games
        run: |
          cp environments/${{ github.event.inputs.environment }}.env .env
          docker compose pull
          for MAP in ${{ github.event.inputs.maps }}
          do
            echo "Running map $MAP"
            export MAP=$MAP
            docker compose up
          done

  collect:
    needs: run
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "collect"
