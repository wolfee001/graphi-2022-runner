name: Batch

on:
  workflow_dispatch:
    inputs:
      P1:
        description: "P1 tag"
        required: true
        default: 'latest'
      P2:
        description: "P2 tag"
        required: true
        default: 'latest'
      P3:
        description: "P3 tag"
        required: true
        default: 'latest'
      P4:
        description: "P4 tag"
        required: true
        default: 'latest'
      P5:
        description: "P5 tag"
        required: true
        default: 'latest'
      P6:
        description: "P6 tag"
        required: true
        default: 'latest'
      runs:
        description: "Runs per map"
        required: true
        default: 10
      maps:
        description: "Maps"
        required: true
        default: "1 2 3 4 5 6 7 8 9 10"

jobs:
  generator:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generator.outputs.matrix }}
    steps:
      - id: generator
        run: |
          
          MAPS=""
          for i in {1..${{ github.event.inputs.runs }}}
          do
            MAPS="$MAPS${{ github.event.inputs.maps }},"
          done

          MAP_ARRAY=($MAPS)

          SEED=42
          MAP_JSON=""
          for ELEMENT in "${MAP_ARRAY[@]}"
          do
              MAP_JSON="$MAP_JSON{\"map\": $ELEMENT, \"seed\": $SEED}, "
              SEED=$((SEED+1))
          done

          echo '::set-output name=matrix::{"run":[$MAP_JSON]}'

  run:
    needs: generator
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJSON(needs.generator.outputs.matrix)}}
      max-parallel: 19
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_USERNAME }}
          password: ${{ secrets.GH_PAT }}

      - name: Run games
        run: |
          echo "Map: ${{ matrix.run.map }}"
          echo "Seed: ${{ matrix.run.seed }}"

  collect:
    needs: run
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "collect"
