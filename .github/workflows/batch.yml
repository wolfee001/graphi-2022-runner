name: Batch

on:
  workflow_dispatch:
    inputs:
      P1:
        description: "P1 tag"
        required: true
        default: 'latest'
      P2:
        description: "P2 tag"
        required: true
        default: 'latest'
      P3:
        description: "P3 tag"
        required: true
        default: 'latest'
      P4:
        description: "P4 tag"
        required: true
        default: 'latest'
      P5:
        description: "P5 tag"
        required: true
        default: 'latest'
      P6:
        description: "P6 tag"
        required: true
        default: 'latest'
      runs:
        description: "Runs per map"
        required: true
        default: 10
      maps:
        description: "Maps"
        required: true
        default: "1, 2, 3, 4, 5, 6, 7, 8, 9, 10"

jobs:
  generator:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generator.outputs.matrix }}
    steps:
      - id: generator
        run: |
          echo '::set-output name=matrix::{"run":[${{ github.event.inputs.maps }}]}'

  run:
    needs: generator
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJSON(needs.generator.outputs.matrix)}}
      max-parallel: 19
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_USERNAME }}
          password: ${{ secrets.GH_PAT }}

      - name: Run games
        run: |
          docker compose pull
          R_SEED=41
          for RUN in {1..${{ github.event.inputs.runs }}}
          do
            R_SEED=$((R_SEED+1))
            echo "Running map ${{ matrix.run }} # $RUN"
            echo MAP=${{ matrix.run }} >> .env
            echo SEED=$R_SEED >> .env
            echo P1=${{ github.event.inputs.P1 }} >> .env
            echo P2=${{ github.event.inputs.P2 }} >> .env
            echo P3=${{ github.event.inputs.P3 }} >> .env
            echo P4=${{ github.event.inputs.P4 }} >> .env
            echo P5=${{ github.event.inputs.P5 }} >> .env
            echo P6=${{ github.event.inputs.P6 }} >> .env

            cat .env

            docker compose up
          done

  collect:
    needs: run
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "collect"
